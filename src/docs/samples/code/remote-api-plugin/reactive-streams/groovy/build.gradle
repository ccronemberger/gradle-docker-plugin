plugins {
    id 'com.bmuschko.docker-remote-api' version '{project-version}'
}

import com.bmuschko.gradle.docker.tasks.container.DockerRemoveContainer
import com.bmuschko.gradle.docker.tasks.container.DockerLogsContainer
import com.github.dockerjava.api.exception.NotFoundException

// tag::on-error[]
task removeContainer1(type: DockerRemoveContainer) {
    targetContainerId 'container-that-does-not-exist'
    onError { exception ->
        // Ignore exception if container does not exist otherwise throw it
        if (!exception instanceof NotFoundException)
            throw exception
    }
}
// end::on-error[]

// tag::on-next[]
task logContainer(type: DockerLogsContainer) {
    targetContainerId 'container-that-does-exist'
    follow = true
    tailAll = true
    onNext { message ->
        // Each log message from the container will be passed as it's made available
        logger.quiet message.toString()
    }
}
// end::on-next[]

// tag::on-complete[]
task removeContainer2(type: DockerRemoveContainer) {
    targetContainerId 'container-that-does-exist'
    onComplete {
        println 'Executes first'
    }
    doLast {
        println 'Executes second'
    }
}
// end::on-complete[]
